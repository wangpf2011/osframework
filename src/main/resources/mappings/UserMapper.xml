<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wf.ssm.mapper.UserMapper" >
  <!-- 开启本mapper的namespace的二级缓存 -->
  <!-- type：指定cache接口的实现类，mybatis默认使用PrepetualCache，如果要和ehcache整合，需要配置type为ehcache实现cache接口的类-->
  <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
  
  <resultMap id="BaseResultMap" type="com.wf.ssm.entity.User" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, username, birthday, sex, address, age, mobile, password
  </sql>
  
  <!-- 在statment中设置useCache=false可以禁用当前select语句的二级缓存，即每次查询都会发出sql去查询，默认情况是true，即该sql使用二级缓存 -->
  <select id="get" resultMap="BaseResultMap" parameterType="java.lang.String" useCache="true">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <delete id="delete" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <!-- 刷新缓存（清空缓存），在mapper的同一个namespace中，如果有其它insert、update、delete操作数据后需要刷新缓存，如果不执行刷新缓存会出现脏读。 -->
  <!-- 设置statement配置中的flushCache="true"属性，默认情况下为true即刷新缓存，如果改成false则不会刷新。 -->
  <insert id="insert" parameterType="com.wf.ssm.entity.User" flushCache="true">
    insert into user (id, username, birthday, sex, address, age, mobile, password)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{sex,jdbcType=CHAR}, #{address,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
      #{mobile,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.wf.ssm.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="password != null" >
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{age,jdbcType=INTEGER}
      </if>
      <if test="address != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateSelective" parameterType="com.wf.ssm.entity.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="update" parameterType="com.wf.ssm.entity.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      sex = #{sex,jdbcType=CHAR},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>